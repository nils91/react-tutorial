{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","handleClick","slice","winner","calculateWinner","isDraw","setState","draw","status","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sOAIA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAU,SACVC,QAASF,EAAME,QAFjB,SAIGF,EAAMG,Q,IAKPC,E,kDACJ,WAAYJ,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAM,CACTC,QAAQC,MAAM,GAAGC,KAAK,MACtBC,SAAQ,GAJM,E,yDAOLC,GAAI,IAAD,OACd,OAAO,cAACX,EAAD,CACLI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAI,EAAKU,YAAYF,Q,kCAGtBA,GACV,IAAMJ,EAAQK,KAAKN,MAAMC,QAAQO,QAC3BC,EAAOC,EAAgBT,GAClBU,EAAOV,IACPQ,GAAUR,EAAQI,KAGvBJ,EAAQI,GAAGC,KAAKN,MAAMI,QAAQ,IAAI,IAClCE,KAAKM,SAAS,CACZX,QAAQA,EACRG,SAASE,KAAKN,MAAMI,a,+BAM5B,IAAMK,EAAOC,EAAgBJ,KAAKN,MAAMC,SAClCY,EAAKF,EAAOL,KAAKN,MAAMC,SACzBa,EAAS,iBAAiBR,KAAKN,MAAMI,QAAQ,IAAI,KAQrD,OAPGS,IACDC,EAAO,kBAENL,IACDK,EAAO,aAAaL,GAIpB,gCACE,qBAAKb,UAAU,SAAf,SAAyBkB,IACzB,sBAAKlB,UAAU,YAAf,UACGU,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,MAErB,sBAAKnB,UAAU,YAAf,UACGU,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,MAErB,sBAAKnB,UAAU,YAAf,UACGU,KAAKS,aAAa,GAClBT,KAAKS,aAAa,GAClBT,KAAKS,aAAa,a,GAxDTC,IAAMC,WA+DpBC,E,uKAEF,OACE,sBAAKtB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSoB,IAAMC,WAgBzB,SAASP,EAAgBT,GAWvB,IAVA,IAAMkB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAd,EAAI,EAAGA,EAAIc,EAAMC,OAAQf,IAAK,CAAC,IAAD,cACnBc,EAAMd,GADa,GAC9BgB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KAGT,SAASV,EAAOV,GAEd,GADaS,EAAgBT,GAE3B,OAAO,EAET,IAAI,IAAII,EAAE,EAAEA,EAAEJ,EAAQmB,OAAOf,IAC3B,GAAe,MAAZJ,EAAQI,GACT,OAAO,EAGX,OAAO,EAKTmB,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.56878a97.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){    \n  return (\n    <button \n      className=\"square\" \n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      squares:Array(9).fill(null),\n      xIsNext:true,\n    }\n  }\n  renderSquare(i) {\n    return <Square \n      value={this.state.squares[i]}\n      onClick={()=>this.handleClick(i)}\n    />;\n  }\n  handleClick(i){\n    const squares=this.state.squares.slice(); //copy the array\n    const winner=calculateWinner(squares);\n    const draw=isDraw(squares);\n    if(draw || winner || squares[i]){\n      return;\n    }else{\n          squares[i]=this.state.xIsNext?'X':'O';\n          this.setState({\n            squares:squares,\n            xIsNext:!this.state.xIsNext,\n          });\n    }\n  }\n\n  render() {\n    const winner=calculateWinner(this.state.squares);\n    const draw=isDraw(this.state.squares);\n    let status = 'Next player: '+(this.state.xIsNext?'X':'O');\n    if(draw){\n      status='ItÂ´s a draw';\n    }\n    if(winner){\n      status='Winner is '+winner;\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction isDraw(squares) {\n  const winner=calculateWinner(squares);\n  if(winner){\n    return false;\n  }\n  for(let i=0;i<squares.length;i++){\n    if(squares[i]==null){\n      return false;\n    }\n  }\n  return true;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}